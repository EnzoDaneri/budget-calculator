{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../ExpensesList.svelte"
  ],
  "sourcesContent": [
    "<!-- https://www.youtube.com/watch?v=uk1eM0Yn0UQ -->\n<script>\nimport { setContext, onMount, afterUpdate } from 'svelte';\n\n//Components\n import Navbar from './Navbar.svelte';\n import ExpensesList from './ExpensesList.svelte';\n import Totals from './Totals.svelte';\n import ExpenseForm from './ExpenseForm.svelte';\n import Modal from './Modal.svelte';\n //Data\n//  import expensesData from './expenses.js';\n//Variables\n let expenses = [];\n //set editing variables\n let setName = '';\n let setAmount = null;\n let setId = null;\n //Toggle form variables\n let isFormOpen = false;\n //reactive\n $: isEditing = setId? true: false;\n $: total = expenses.reduce((ac, curr) => {\n     return (ac += curr.amount);\n }, 0)\n //Functions\n const showForm = () => {\n     isFormOpen = true;\n }\n const hideForm = () => {\n     isFormOpen = false;\n     setName = '';\n     setAmount = null;\n     setId = null;\n }\n const removeExpense= (id) => {\n     expenses = expenses.filter(item => item.id !== id);\n }\n const  clearExpenses = () => {\n     expenses = [];\n\n }\n const addExpense = ({name, amount}) => {\n     let expense = {id: Math.random() * Date.now(),\n     name, amount};\n     expenses = [expense, ...expenses];\n\n }\n const setModifiedExpense = (id) => {\n     \n      let expense = expenses.find(item => item.id === id);\n      setId = expense.id;\n      setName = expense.name;\n      setAmount = expense.amount;\n      showForm();\n }\n const editExpense = ({name, amount}) => {\n  expenses = expenses.map(item => {\n      return item.id === setId? {...item, name, amount} : {...item}\n  });\n  setId = null;\n  setAmount= null;\n  setName = '';\n\n     \n }\n //Context  \n setContext('remove', removeExpense);\n setContext('modify', setModifiedExpense);\n //Local storage\n const setLocalStorage =() => {\n     localStorage.setItem('expenses',JSON.stringify( expenses));\n }\n\nonMount(() => {\n   expenses = localStorage.getItem('expenses')\n   ? JSON.parse(localStorage.getItem('expenses'))\n   \n   :[];\n});\n\nafterUpdate(() => {\n  setLocalStorage();\n});\n</script>\n \n\n<Navbar {showForm} />\n<main class=\"content\">\n{#if isFormOpen}\n<Modal>\n<ExpenseForm\n {addExpense}\n name={setName} \n amount={setAmount}\n {isEditing} \n {editExpense}\n {hideForm}/>\n </Modal>\n{/if}\n<Totals title=\"Total expenses\" {total}/>\n<ExpensesList {expenses} />\n<button type=\"button\" class=\"btn btn-primary btn-block\" on:click={clearExpenses}>Clear expenses</button>\n</main>\n\n<div class=\"credits\">\n<a href=\"https://www.youtube.com/watch?v=uk1eM0Yn0UQ\">Credits</a>\n\n</div>\n<style>\n.credits {\n    text-align: center;\n}\n</style>",
    "<script>\n import SectionTitle from './Title.svelte';\n import Expense from './Expense.svelte';\n import {fly } from 'svelte/transition';\n import { flip } from 'svelte/animate';\nexport let expenses= [];\n</script>\n\n<style>\nh2 {\n    text-transform: capitalize;\n}\n\n</style>\n\n\n<section>\n<SectionTitle title=\"expense List\"/>\n<ul>\n{#each expenses as expense, index (expense.id)}\n<div in:fly={{x:200, delay:(index+1)*700}} \nout:fly={{ x: -200}} animate:flip>\n<Expense {...expense}/>\n</div>\n{:else}\n<h2>no expenses added to the list</h2>\n\n{/each}\n\n\n</ul>\n</section>"
  ],
  "names": [],
  "mappings": "AA8GA,QAAQ,cAAC,CAAC,AACN,UAAU,CAAE,MAAM,AACtB,CAAC;ACvGD,EAAE,cAAC,CAAC,AACA,cAAc,CAAE,UAAU,AAC9B,CAAC"
}